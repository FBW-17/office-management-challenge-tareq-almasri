{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/fbw17/javascript/frontend/React/office-managment/src/components/List.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Table } from \"react-bootstrap\";\nexport default class List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employee: [{\n        name: \"Alex\",\n        dep: \"Tech\",\n        available: true\n      }, {\n        name: \"Bea\",\n        dep: \"Project managment\",\n        available: true\n      }, {\n        name: \"Carl\",\n        dep: \"HR\",\n        available: true\n      }, {\n        name: \"Dasha\",\n        dep: \"Backend dev team\",\n        available: true\n      }, {\n        name: \"Eric\",\n        dep: \"Business development\",\n        available: true\n      }, {\n        name: \"Francesca\",\n        dep: \"Frontend dev team\",\n        available: true\n      }, {\n        name: \"Gabriella\",\n        dep: \"Online marketing\",\n        available: true\n      }],\n      toggle: \"Available\"\n    };\n  }\n\n  render() {\n    let arr = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\n    let arr2 = arr.slice(arr.indexOf(Date().substring(0, 3))).concat(arr.slice(0, arr.indexOf(Date().substring(0, 3))));\n    let available = this.state.employee.filter(x => x.available === true);\n    let final = available.concat(available).concat(available).concat(available).concat(available).concat(available).concat(available).concat(available).concat(available).concat(available).concat(available);\n    return React.createElement(\"div\", {\n      style: {\n        padding: \"100px\",\n        display: \"grid\",\n        placeItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"th\", {\n      style: {\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"th\", {\n      style: {\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, available.length === 0 ? React.createElement(\"td\", {\n      colSpan: \"3\",\n      style: {\n        height: '245px',\n        paddingTop\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"No one is available!\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"0\",\n        top: \"10px\",\n        padding: \"0 4px\",\n        color: \"#fff\",\n        backgroundColor: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Today\"), arr2[0]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, final[0].name, \" / \", final[0].dep), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, final[1].name, \" / \", final[1].dep)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, arr[1]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, final[2].name, \" / \", final[2].dep), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, final[3].name, \" / \", final[3].dep)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, arr[2]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, final[4].name, \" / \", final[4].dep), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, final[5].name, \" / \", final[5].dep)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, arr[3]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, final[6].name, \" / \", final[6].dep), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, final[7].name, \" / \", final[7].dep)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, arr[4]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, final[8].name, \" / \", final[8].dep), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, final[9].name, \" / \", final[9].dep))))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"400px\",\n        margin: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.employee.map(x => React.createElement(\"div\", {\n      key: Math.random(),\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, x.name), React.createElement(\"button\", {\n      style: {\n        color: \"#fff\",\n        borderRadius: \"8px\",\n        backgroundColor: x.available ? \"green\" : \"red\"\n      },\n      onClick: () => {\n        this.setState(prev => {\n          let employee = [...prev.employee];\n          let theOne = employee.find(y => y.name === x.name);\n          theOne.available = !theOne.available;\n          return {\n            employee: employee.map(z => z.name === theOne.name ? theOne : z)\n          };\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, x.available ? \"Available\" : \"Not Available\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/dci/lord-of-scripts/fbw17/javascript/frontend/React/office-managment/src/components/List.js"],"names":["React","Component","Fragment","Table","List","state","employee","name","dep","available","toggle","render","arr","arr2","slice","indexOf","Date","substring","concat","filter","x","final","padding","display","placeItems","width","length","height","paddingTop","position","left","top","color","backgroundColor","flexDirection","margin","map","Math","random","justifyContent","borderRadius","setState","prev","theOne","find","y","z"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CI,KAD0C,GAClC;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,GAAG,EAAE,MAArB;AAA6BC,QAAAA,SAAS,EAAE;AAAxC,OADQ,EAER;AAAEF,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,GAAG,EAAE,mBAApB;AAAyCC,QAAAA,SAAS,EAAE;AAApD,OAFQ,EAGR;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,GAAG,EAAE,IAArB;AAA2BC,QAAAA,SAAS,EAAE;AAAtC,OAHQ,EAIR;AACEF,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,GAAG,EAAE,kBAFP;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAJQ,EASR;AACEF,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,GAAG,EAAE,sBAFP;AAGEC,QAAAA,SAAS,EAAE;AAHb,OATQ,EAcR;AACEF,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,GAAG,EAAE,mBAFP;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAdQ,EAmBR;AACEF,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,GAAG,EAAE,kBAFP;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAnBQ,CADJ;AA0BNC,MAAAA,MAAM,EAAE;AA1BF,KADkC;AAAA;;AA8B1CC,EAAAA,MAAM,GAAG;AACP,QAAIC,GAAG,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAAV;AACA,QAAIC,IAAI,GAAGD,GAAG,CACXE,KADQ,CACFF,GAAG,CAACG,OAAJ,CAAYC,IAAI,GAAGC,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAZ,CADE,EAERC,MAFQ,CAEDN,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAaF,GAAG,CAACG,OAAJ,CAAYC,IAAI,GAAGC,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAZ,CAAb,CAFC,CAAX;AAGA,QAAIR,SAAS,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACX,SAAF,KAAgB,IAAhD,CAAhB;AACA,QAAIY,KAAK,GAAGZ,SAAS,CAClBS,MADS,CACFT,SADE,EAETS,MAFS,CAEFT,SAFE,EAGTS,MAHS,CAGFT,SAHE,EAITS,MAJS,CAIFT,SAJE,EAKTS,MALS,CAKFT,SALE,EAMTS,MANS,CAMFT,SANE,EAOTS,MAPS,CAOFT,SAPE,EAQTS,MARS,CAQFT,SARE,EASTS,MATS,CASFT,SATE,EAUTS,MAVS,CAUFT,SAVE,CAAZ;AAYA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEa,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,OAAO,EAAE,MAA7B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAI,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAI,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,SAAS,CAACiB,MAAV,KAAqB,CAArB,GACC;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,OAAT;AAAkBC,QAAAA;AAAlB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,IAAI,EAAE,GAFD;AAGLC,QAAAA,GAAG,EAAE,MAHA;AAILT,QAAAA,OAAO,EAAE,OAJJ;AAKLU,QAAAA,KAAK,EAAE,MALF;AAMLC,QAAAA,eAAe,EAAE;AANZ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAaGpB,IAAI,CAAC,CAAD,CAbP,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CAhBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CAnBF,CADF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,GAAG,CAAC,CAAD,CAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CALF,CAzBF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,GAAG,CAAC,CAAD,CAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CALF,CAnCF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,GAAG,CAAC,CAAD,CAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CALF,CA5CF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,GAAG,CAAC,CAAD,CAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,KAAK,CAAC,CAAD,CAAL,CAASd,IADZ,SACqBc,KAAK,CAAC,CAAD,CAAL,CAASb,GAD9B,CALF,CArDF,CAJJ,CARF,CADF,EAgFE;AACE,MAAA,KAAK,EAAE;AACLe,QAAAA,OAAO,EAAE,MADJ;AAELW,QAAAA,aAAa,EAAE,QAFV;AAGLT,QAAAA,KAAK,EAAE,OAHF;AAILU,QAAAA,MAAM,EAAE;AAJH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAK9B,KAAL,CAAWC,QAAX,CAAoB8B,GAApB,CAAwBhB,CAAC,IACxB;AACE,MAAA,GAAG,EAAEiB,IAAI,CAACC,MAAL,EADP;AAEE,MAAA,KAAK,EAAE;AAAEf,QAAAA,OAAO,EAAE,MAAX;AAAmBgB,QAAAA,cAAc,EAAE;AAAnC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,KAAK,EAAE;AAAEd,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCL,CAAC,CAACb,IAAnC,CAJF,EAKE;AACE,MAAA,KAAK,EAAE;AACLyB,QAAAA,KAAK,EAAE,MADF;AAELQ,QAAAA,YAAY,EAAE,KAFT;AAGLP,QAAAA,eAAe,EAAEb,CAAC,CAACX,SAAF,GAAc,OAAd,GAAwB;AAHpC,OADT;AAME,MAAA,OAAO,EAAE,MAAM;AACb,aAAKgC,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAIpC,QAAQ,GAAG,CAAC,GAAGoC,IAAI,CAACpC,QAAT,CAAf;AACA,cAAIqC,MAAM,GAAGrC,QAAQ,CAACsC,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACtC,IAAF,KAAWa,CAAC,CAACb,IAAhC,CAAb;AACAoC,UAAAA,MAAM,CAAClC,SAAP,GAAmB,CAACkC,MAAM,CAAClC,SAA3B;AACA,iBAAO;AACLH,YAAAA,QAAQ,EAAEA,QAAQ,CAAC8B,GAAT,CAAaU,CAAC,IACtBA,CAAC,CAACvC,IAAF,KAAWoC,MAAM,CAACpC,IAAlB,GAAyBoC,MAAzB,GAAkCG,CAD1B;AADL,WAAP;AAKD,SATD;AAUD,OAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBG1B,CAAC,CAACX,SAAF,GAAc,WAAd,GAA4B,eAnB/B,CALF,CADD,CARH,CAhFF,CADF;AAyHD;;AAzKyC","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nexport default class List extends Component {\n  state = {\n    employee: [\n      { name: \"Alex\", dep: \"Tech\", available: true },\n      { name: \"Bea\", dep: \"Project managment\", available: true },\n      { name: \"Carl\", dep: \"HR\", available: true },\n      {\n        name: \"Dasha\",\n        dep: \"Backend dev team\",\n        available: true\n      },\n      {\n        name: \"Eric\",\n        dep: \"Business development\",\n        available: true\n      },\n      {\n        name: \"Francesca\",\n        dep: \"Frontend dev team\",\n        available: true\n      },\n      {\n        name: \"Gabriella\",\n        dep: \"Online marketing\",\n        available: true\n      }\n    ],\n    toggle: \"Available\"\n  };\n\n  render() {\n    let arr = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\n    let arr2 = arr\n      .slice(arr.indexOf(Date().substring(0, 3)))\n      .concat(arr.slice(0, arr.indexOf(Date().substring(0, 3))));\n    let available = this.state.employee.filter(x => x.available === true);\n    let final = available\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available)\n      .concat(available);\n\n    return (\n      <div style={{ padding: \"100px\", display: \"grid\", placeItems: \"center\" }}>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: \"100px\" }}>Day</th>\n              <th style={{ width: \"200px\" }}>Open</th>\n              <th style={{ width: \"200px\" }}>Close</th>\n            </tr>\n          </thead>\n          <tbody>\n            {available.length === 0 ? (\n              <td colSpan=\"3\" style={{height: '245px', paddingTop}}>No one is available!</td>\n            ) : (\n              <Fragment>\n                <tr>\n                  <td style={{ position: \"relative\" }}>\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        left: \"0\",\n                        top: \"10px\",\n                        padding: \"0 4px\",\n                        color: \"#fff\",\n                        backgroundColor: \"red\"\n                      }}\n                    >\n                      Today\n                    </div>\n                    {arr2[0]}\n                  </td>\n                  <td>\n                    {final[0].name} / {final[0].dep}\n                  </td>\n                  <td>\n                    {final[1].name} / {final[1].dep}\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>{arr[1]}</td>\n                  <td>\n                    {final[2].name} / {final[2].dep}\n                  </td>\n                  <td>\n                    {final[3].name} / {final[3].dep}\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>{arr[2]}</td>\n                  <td>\n                    {final[4].name} / {final[4].dep}\n                  </td>\n                  <td>\n                    {final[5].name} / {final[5].dep}\n                  </td>\n                </tr>\n                <tr>\n                  <td>{arr[3]}</td>\n                  <td>\n                    {final[6].name} / {final[6].dep}\n                  </td>\n                  <td>\n                    {final[7].name} / {final[7].dep}\n                  </td>\n                </tr>\n                <tr>\n                  <td>{arr[4]}</td>\n                  <td>\n                    {final[8].name} / {final[8].dep}\n                  </td>\n                  <td>\n                    {final[9].name} / {final[9].dep}\n                  </td>\n                </tr>\n              </Fragment>\n            )}\n          </tbody>\n        </Table>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"400px\",\n            margin: \"30px\"\n          }}\n        >\n          {this.state.employee.map(x => (\n            <div\n              key={Math.random()}\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <div style={{ width: \"100px\" }}>{x.name}</div>\n              <button\n                style={{\n                  color: \"#fff\",\n                  borderRadius: \"8px\",\n                  backgroundColor: x.available ? \"green\" : \"red\"\n                }}\n                onClick={() => {\n                  this.setState(prev => {\n                    let employee = [...prev.employee];\n                    let theOne = employee.find(y => y.name === x.name);\n                    theOne.available = !theOne.available;\n                    return {\n                      employee: employee.map(z =>\n                        z.name === theOne.name ? theOne : z\n                      )\n                    };\n                  });\n                }}\n              >\n                {x.available ? \"Available\" : \"Not Available\"}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}